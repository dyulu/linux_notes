# cksum: Print CRC checksum and byte counts of each FILE.
# cksum [FILE]...

$ cksum the_file
2195280042 256 the_file

# md5sum: Print or check MD5 (128-bit) checksums
# md5sum [OPTION]... [FILE]...
# -b, --binary: read in binary mode
# -c, --check: read MD5 from files and check them
# –-tag : create a BSD-style checksum
# -t,  --text: read in text mode (default)
# -z, --zero: end each output line with NUL, not newline, and disable file name escaping
# The options which are useful when verifying checksum :
# –-ignore-missing : don’t report status for missing files
# –-quiet : don’t print OK for each successfully verified file
# –-status : don’t output anything, status code shows success
# –-strict : exit non-zero for improperly formatted checksum files
# -w, --warn : warn about improperly formatted checksum files

# Store MD5 in a file and then verify it
$ md5sum the_file > the_file.md5
$ cat the_file.md5 
83f3d9679bc0bc461868c8856d7744ca  the_file
$ md5sum -c the_file.md5
the_file: OK

$ md5sum --tag the_file.md5 
MD5 (the_file.md5) = c4ad7432f8eef69ab81ab61cebad2c71

# sha1sum: Print or check SHA1 (160-bit) checksums
# Same options as md5sum
# Do  not  use  the  SHA-1  algorithm  for  security  related  purposes.   Instead,  use  an  SHA-2 algorithm,
# implemented in the programs sha224sum, sha256sum, sha384sum, sha512sum, or the BLAKE2 algorithm, implemented
# in b2sum

# sha256sum: Print or check SHA256 (256-bit) checksums
# sha512sum: Print or check SHA512 (512-bit) checksums
# b2sum: Print or check BLAKE2 (512-bit) checksums
