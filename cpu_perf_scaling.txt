#
# https://www.kernel.org/doc/html/v4.19/admin-guide/pm/cpufreq.html
# CPU Performance Scaling
# Operating Performance Points or P-states (in ACPI terminology)
# Linux CPUFreq (CPU Frequency scaling) subsystem:
#   consists of three layers of code: the core, scaling governors and scaling drivers
#   CPUFreq core:       common code infrastructure and user space interfaces for all platforms that support CPU performance scaling
#   Scaling governors : algorithms to estimate the required CPU capacity
#   Scaling drivers:    provide scaling governors with information on the available P-states (or P-state ranges in some cases)
#                       access platform-specific hardware interfaces to change CPU P-states as requested by scaling governors

# CPUFreq Policy Objects:
#   struct cpufreq_policy
#   represents sets of CPUs sharing hardware P-state control interfaces
#   CPUFreq core maintains a pointer to a struct cpufreq_policy object for every CPU in the system

# Generic Scaling Governors:
#   performance
#   powersave
#   userspace: does not do anything by itself; allows user space to set the CPU frequency for the policy it is attached to by writing to the scaling_setspeed
#   schedutil: uses CPU utilization data available from the CPU scheduler
#   ondemand:  uses CPU load as a CPU frequency selection metric
#   conservative: uses CPU load as a CPU frequency selection metric

# Frequency Boost Support:
#   Intel: Turbo Boost
#   AMD:   Turbo-Core, Core Performance Boost

# Kernel Command Line Options for intel_pstate
#   intel_pstate= prefix
#   disable, passive, force, no_hwp, hwp_only, support_acpi_ppc, per_cpu_perf_limits
#
# https://www.kernel.org/doc/html/v4.19/admin-guide/pm/intel_pstate.html
# intel_pstate CPU Performance Scaling Driver
#   part of Linux CPUFreq
#   a scaling driver for the Sandy Bridge and later generations of Intel processors
#   bypass the governor layer and implement its own performance scaling algorithms

# Operation Modes: cat /sys/devices/system/cpu/intel_pstate/status
#   active mode with hardware-managed P-states support (HWP)
#   active mode without hardware-managed P-states support (HWP)
#   passive
# Active state:
#   scaling_driver policy attribute in sysfs for all CPUFreq policies contains the string “intel_pstate”
#     cat /sys/devices/system/cpu/cpufreq/policy*/scaling_driver
#   driver bypasses the scaling governors layer of CPUFreq and provides its own scaling algorithms for P-state selection
#     cat /sys/devices/system/cpu/cpufreq/policy*/scaling_governor
#     if CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE=y, it is "performance"
#     else                                          it is "powersave"
# Active Mode With HWP:
#   intel_pstate relies on the processor to select P-states by itself
#   to disable with bootargs: intel_pstate=no_hwp 
# HWP + performance:
#   intel_pstate will write 0 to the processor’s Energy-Performance Preference (EPP) knob (if supported) or its Energy-Performance Bias (EPB) knob (otherwise)
#     processor’s internal P-state selection logic is expected to focus entirely on performance
# HWP + powersave:
# 
# Active Mode Without HWP:
#   default operation mode for processors that do not support the HWP feature
#   also is used by default with the intel_pstate=no_hwp argument
# Passive Mode:
#   bootargs: intel_pstate=passive
#             implies intel_pstate=no_hwp
#   scaling_driver policy attribute in sysfs for all CPUFreq policies contains the string “intel_cpufreq”
#     cat /sys/devices/system/cpu/cpufreq/policy*/scaling_driver
#  the driver behaves like a regular CPUFreq scaling driver
#
# Turbo P-states Support:
#   allow a multicore processor to opportunistically increase the P-state of one or more cores
#     if there is enough power to do that and
#     if that is not going to cause the thermal envelope of the processor package to be exceeded
#   one important property of turbo P-states is that they are not sustainable
#   cat /sys/devices/system/cpu/intel_pstate/no_turbo

# CONFIG_X86_PCC_CPUFREQ is not set
# CONFIG_X86_ACPI_CPUFREQ is not set
# CONFIG_X86_INTEL_PSTATE=y
# CONFIG_X86_AMD_PSTATE is not set
# CONFIG_X86_AMD_PSTATE_UT is not set
# For a 4 core system:
$ ls /sys/devices/system/cpu/*
/sys/devices/system/cpu/isolated    /sys/devices/system/cpu/online
/sys/devices/system/cpu/kernel_max  /sys/devices/system/cpu/possible
/sys/devices/system/cpu/modalias    /sys/devices/system/cpu/present
/sys/devices/system/cpu/offline     /sys/devices/system/cpu/uevent

/sys/devices/system/cpu/cpu0:
cache	 crash_notes	   firmware_node  node0      thermal_throttle
cpufreq  crash_notes_size  hotplug	  power      topology
cpuidle  driver		   microcode	  subsystem  uevent

/sys/devices/system/cpu/cpu1:
cache	 crash_notes	   firmware_node  node0   subsystem	    uevent
cpufreq  crash_notes_size  hotplug	  online  thermal_throttle
cpuidle  driver		   microcode	  power   topology

/sys/devices/system/cpu/cpu2:
cache	 crash_notes	   firmware_node  node0   subsystem	    uevent
cpufreq  crash_notes_size  hotplug	  online  thermal_throttle
cpuidle  driver		   microcode	  power   topology

/sys/devices/system/cpu/cpu3:
cache	 crash_notes	   firmware_node  node0   subsystem	    uevent
cpufreq  crash_notes_size  hotplug	  online  thermal_throttle
cpuidle  driver		   microcode	  power   topology

/sys/devices/system/cpu/cpufreq:
policy0  policy1  policy2  policy3

/sys/devices/system/cpu/cpuidle:
available_governors  current_driver  current_governor  current_governor_ro

/sys/devices/system/cpu/hotplug:
states

/sys/devices/system/cpu/intel_pstate:
max_perf_pct  min_perf_pct  no_turbo  num_pstates  status  turbo_pct

/sys/devices/system/cpu/microcode:

/sys/devices/system/cpu/power:
autosuspend_delay_ms  runtime_active_time  runtime_suspended_time
control		      runtime_status

/sys/devices/system/cpu/smt:
active	control

/sys/devices/system/cpu/vulnerabilities:
gather_data_sampling  meltdown		    spec_store_bypass  tsx_async_abort
itlb_multihit	      mmio_stale_data	    spectre_v1
l1tf		      retbleed		    spectre_v2
mds		      spec_rstack_overflow  srbds

$ tail -n +1 /sys/devices/system/cpu/cpufreq/policy0/*
==> /sys/devices/system/cpu/cpufreq/policy0/affected_cpus <==
0

==> /sys/devices/system/cpu/cpufreq/policy0/base_frequency <==
2100000

==> /sys/devices/system/cpu/cpufreq/policy0/cpuinfo_max_freq <==
2200000

==> /sys/devices/system/cpu/cpufreq/policy0/cpuinfo_min_freq <==
800000

==> /sys/devices/system/cpu/cpufreq/policy0/cpuinfo_transition_latency <==
0

==> /sys/devices/system/cpu/cpufreq/policy0/energy_performance_available_preferences <==
default performance balance_performance balance_power power 

==> /sys/devices/system/cpu/cpufreq/policy0/energy_performance_preference <==
performance

==> /sys/devices/system/cpu/cpufreq/policy0/related_cpus <==
0

==> /sys/devices/system/cpu/cpufreq/policy0/scaling_available_governors <==
performance powersave

==> /sys/devices/system/cpu/cpufreq/policy0/scaling_cur_freq <==
2200000

==> /sys/devices/system/cpu/cpufreq/policy0/scaling_driver <==
intel_pstate

==> /sys/devices/system/cpu/cpufreq/policy0/scaling_governor <==
performance

==> /sys/devices/system/cpu/cpufreq/policy0/scaling_max_freq <==
2200000

==> /sys/devices/system/cpu/cpufreq/policy0/scaling_min_freq <==
800000

==> /sys/devices/system/cpu/cpufreq/policy0/scaling_setspeed <==
<unsupported>

$ tail -n +1 /sys/devices/system/cpu/intel_pstate/*
==> /sys/devices/system/cpu/intel_pstate/hwp_dynamic_boost <==
0

==> /sys/devices/system/cpu/intel_pstate/max_perf_pct <==
100

==> /sys/devices/system/cpu/intel_pstate/min_perf_pct <==
36

==> /sys/devices/system/cpu/intel_pstate/no_turbo <==
0

==> /sys/devices/system/cpu/intel_pstate/num_pstates <==
15

==> /sys/devices/system/cpu/intel_pstate/status <==
active

==> /sys/devices/system/cpu/intel_pstate/turbo_pct <==
8
